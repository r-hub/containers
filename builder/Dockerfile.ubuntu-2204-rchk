## Emacs, make this -*- mode: sh; -*-

FROM ubuntu:jammy

ENV OS_IDENTIFIER ubuntu-2204

# -------------------------------------------------------------------------
# Dependencies
# Install wllvm into the package tree

RUN chmod 0777 /opt

RUN set -x \
  && sed -i "s|# deb-src|deb-src|g" /etc/apt/sources.list \
  && export DEBIAN_FRONTEND=noninteractive \
  && apt-get update \
  && apt-get install -y curl libcurl4-openssl-dev libicu-dev \
             libopenblas-base libpcre2-dev wget python3-pip \
  && apt-get build-dep -y r-base \
  && apt-get install -y git make clang llvm-dev '^clang++$' llvm \
             libllvm14 libc++-dev libc++abi-dev file \
  && mkdir -p /opt/R/devel-rchk/python \
  && pip3 install --target /opt/R/devel-rchk/python wllvm \
  && for prog in $(ls /opt/R/devel-rchk/python/bin); do \
      sed -i '0,/^import /s//import sys\nsys.path.append("\/opt\/R\/devel-rchk\/python")\n&/' \
          /opt/R/devel-rchk/python/bin/${prog}; \
  done

RUN mkdir -p /opt/R/devel-rchk/bcstore
ENV WLLVM_BC_STORE=/opt/R/devel-rchk/bcstore

# -------------------------------------------------------------------------
# Install rchk into the package tree

ENV WLLVM=/opt/R/devel-rchk/python/bin
ENV RCHK=/opt/R/devel-rchk/rchk
ENV LLVM=/usr/lib/llvm-14

RUN set -x \
    && cd /opt/R/devel-rchk \
    && git clone -b fix/altrep-lists-llvm14 --depth 1 https://github.com/gaborcsardi/rchk.git \
    && rm -rf rchk/.git \
    && cd rchk/src \
    && make \
    && cd .. \
    && mkdir -p bin \
    && cp src/*check bin \
    && rm -rf doc examples image src \
    && mv bin src \
    && strip -x src/*

# -------------------------------------------------------------------------
# Packaging tool

RUN curl -LO "https://github.com/goreleaser/nfpm/releases/download/v2.18.1/nfpm_$(dpkg --print-architecture).deb" && \
    apt install -y "./nfpm_$(dpkg --print-architecture).deb" && \
    rm "nfpm_$(dpkg --print-architecture).deb"

# -------------------------------------------------------------------------
# Configure R build

ENV CONFIGURE_OPTIONS="\
    --with-blas=no \
    --with-lapack=no \
    --enable-R-static-lib \
    --with-tcltk \
    --enable-memory-profiling \
    --with-x"

ENV CC=/opt/R/devel-rchk/python/bin/wllvm
ENV CXX="/opt/R/devel-rchk/python/bin/wllvm++ -stdlib=libc++"
ENV CPICFLAGS="-fPIC"
ENV CFLAGS="-Wall -g -O0 -fPIC"
ENV CXXFLAGS="-Wall -g -O0 -fPIC -I/usr/include/libcxxabi"
ENV LLVM_COMPILER=clang
ENV LD="clang++ -stdlib=libc++"

# Override the default pager used by R
ENV PAGER /usr/bin/pager

# R 3.x requires PCRE2 for Pango support on Ubuntu 22
ENV INCLUDE_PCRE2_IN_R_3 yes

COPY builder/rchk.sh /opt/R/devel-rchk/bin/rchk.sh
COPY builder/package.ubuntu-2204-rchk /package.sh
COPY build.sh .
ENTRYPOINT ./build.sh
