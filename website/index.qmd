---
project:
  type: website
  resources:
    - "manifest.json"
execute:
  cache: false
title: Docker containers for R developers
---

```{r include = FALSE, cache = FALSE}
pkgload::load_all()
```

# Available containers

Our ultimate goal is to have containers that match all [primary CRAN Linux
systems](https://cran.r-project.org/web/checks/check_flavors.html) and all
[extra CRAN checks](https://cran.r-project.org/web/checks/check_issue_kinds.html).

Currently we have the following CRAN-like containers:

| CRAN name                         | R-hub name      | OS                             | R version                    | Details                                    |
|:----------------------------------|:----------------|:-------------------------------|:-----------------------------|:-------------------------------------------|
| r-devel-linux-x86_64-debian-clang | ubuntu-clang    | `r os_name("ubuntu-clang")`    | `r r_ver("ubuntu-clang")`    | [Details](containers.html#ubuntu-clang)    |
| r-devel-linux-x86_64-debian-gcc   | ubuntu-gcc12    | `r os_name("ubuntu-gcc12")`    | `r r_ver("ubuntu-gcc12")`    | [Details](containers.html#ubuntu-gcc12)    |
| r-patched-linux-x86_64            | ubuntu-next     | `r os_name("ubuntu-next")`     | `r r_ver("ubuntu-next")`     | [Details](containers.html#ubuntu-next)     |
| r-release-linux-x86_64            | ubuntu-release  | `r os_name("ubuntu-release")`  | `r r_ver("ubuntu-release")`  | [Details](containers.html#ubuntu-release)  |

Plus the following containers for additional CRAN checks:

| CRAN name  | R-hub name | Description                                                      | OS                                | R version               | Details                                |
|:-----------|:-----------|:-----------------------------------------------------------------|:----------------------------------|:------------------------|----------------------------------------|
|ATLAS       | atlas      | Tests with alternative BLAS/LAPACK implementations               | `r os_name("atlas")`              | `r r_ver("atlas")`      | [Details](containers.html#atlas)       |
|C23         | c23        | Checks of compiling C code in C23 mode                           | `r os_name("c23")`, libc++        | `r r_ver("c23")`    | [Details](containers.html#c23)             |
|clang-ASAN  | clang-asan | Tests of memory access errors using AddressSanitizer             | `r os_name("clang-asan")`, libc++ | `r r_ver("clang-asan")` | [Details](containers.html#clang-asan)  |
|clang-UBSAN | clang-asan | Tests of memory access errors using Undefined Behavior Sanitizer | `r os_name("clang-asan")`, libc++ | `r r_ver("clang-asan")` | [Details](containers.html#clang-asan)  |
|clang16     | clang16    | Checks with Clang 16.0.0                                         | `r os_name("clang16")`, libc++    | `r r_ver("clang16")`    | [Details](containers.html#clang16)     |
|clang17     | clang17    | Checks with LLVM pre-17.0.0                                      | `r os_name("clang17")`, libc++    | `r r_ver("clang17")`    | [Details](containers.html#clang17)     |
|clang18     | clang18    | Checks with LLVM pre-18.0.0                                      | `r os_name("clang18")`, libc++    | `r r_ver("clang18")`    | [Details](containers.html#clang18)     |
|clang19     | clang19    | Checks with LLVM pre-19.0.0                                      | `r os_name("clang19")`, libc++    | `r r_ver("clang19")`    | [Details](containers.html#clang19)     |
|clang20     | clang20    | Checks with LLVM pre-20.0.0                                      | `r os_name("clang20")`, libc++    | `r r_ver("clang20")`    | [Details](containers.html#clang20)     |
|donttest    | donttest   | Tests including `\donttest` examples                             | `r os_name("donttest")`           | `r r_ver("donttest")`   | [Details](containers.html#donttest)    |
|gcc13       | gcc13      | Checks with GCC trunk aka 13.0                                   | `r os_name("gcc13")`              | `r r_ver("gcc13")`      | [Details](containers.html#gcc13)       |
|gcc14       | gcc14      | Checks with GCC trunk aka 14.0                                   | `r os_name("gcc14")`              | `r r_ver("gcc14")`      | [Details](containers.html#gcc14)       |
|Intel       | intel      | Checks with Intel oneAPI 2023.x compilers                        | `r os_name("intel")`              | `r r_ver("intel")`      | [Details](containers.html#intel)       |
|MKL         | mkl        | Tests with alternative BLAS/LAPACK implementations               | `r os_name("mkl")`                | `r r_ver("mkl")`        | [Details](containers.html#mkl)         |
|noLD        | nold       | Tests without long double                                        | `r os_name("nold")`               | `r r_ver("nold")`       | [Details](containers.html#nold)        |
|noRemap     | noremap    | Compile C++ code with R_NO_REMAP defined                         | `r os_name("noremap")`            | `r r_ver("noremap")`    | [Details](containers.html#noremap)     |
|noSuggests  | nosuggests | Tests without suggested packages                                 | `r os_name("nosuggests")`         | `r r_ver("nosuggests")` | [Details](containers.html#nosuggests)  |
|rchk        | rchk       | Checks of native code (C/C++) based on static code analysis      | `r os_name("rchk")`               | `r r_ver("rchk")`       | [Details](containers.html#rchk)        |
|valgrind    | valgrind   | Tests of memory access errors using valgrind                     | `r os_name("valgrind")`           | `r r_ver("valgrind")`   | [Details](containers.html#valgrind)    |

And these additional containers:

|R-hub name | Description                                                      | OS                     | R version                        | Details                                |
|:----------|:-----------------------------------------------------------------|:-----------------------|:---------------------------------|----------------------------------------|
| rhel7     | RedHat Enterprise Linux 7 (needs RedHat subscription)            | `r os_name("rhel7")`   | `r r_ver("rhel7")`               | [Details](containers.html#rhel7)       |
| rhel8     | RedHat Enterprise Linux 8 (needs RedHat subscription)            | `r os_name("rhel8")`   | `r r_ver("rhel8")`               | [Details](containers.html#rhel8)       |
| rhel9     | RedHat Enterprise Linux 9 (needs RedHat subscription)            | `r os_name("rhel9")`   | `r r_ver("rhel9")`               | [Details](containers.html#rhel9)       |
| s390x     | Test on a big-endian platform: s390x Linux                       | `r os_name("s390x")`   | `r r_ver("s390x")`               | [Details](containers.html#s390x)       |
| centos7   | Test R on CentOS 7 (equivalent to RHEL 7), w/ multiple R versions| `r os_name("centos7")` | Last 5 releases, R-next, R-devel | [Details](containers.html#centos7)     |

All containers are available from
[Docker Hub](https://hub.docker.com/u/rhub) and from
[Github Packages](https://github.com/orgs/r-hub/packages?repo_name=containers).

See the [containers page](containers.html) for more data about the
containers.

# Usage

You can use these containers [on your machine](local.html), or on
[GitHub Actions](gha.html).
